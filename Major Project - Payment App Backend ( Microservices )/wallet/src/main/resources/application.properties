SERVER.port = 5000

# ******************** for database & jpa **********************
spring.datasource.url=jdbc:mysql://localhost:3306/walletdb?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=admin

spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true
# *********************************

# initial balance of a created user
wallet.create.opening-balance=10.0


# ************ for microservice *********************
spring.application.name = wallet-service
eureka.client.register-with-eureka = true
eureka.client.fetch-registry = true
eureka.client.serviceUrl.defaultZone = http://localhost:8761/eureka
# *********************************

# ********** zipkin and actuator properties **********
spring.zipkin.sampler.probability=1.0

#management.endpoints.web.exposure.include = health  ( duplicate )
#   # detailed view of the service health you can see in http://localhost:5000/actuator/health
#management.endpoint.health.show-details = always  ( duplicate )

# ***************************************************


# ********** configuring the resilience properties ************

# ********** for actuator endpoint ***********************
management.endpoints.web.exposure.include = health
management.endpoint.health.show-details = always
management.health.circuitbreakers.enabled = true


# ********** for circuit breakers ***********************
resilience4j.circuitbreaker.instances.transactionBreaker.minimumNumberOfCalls=10
resilience4j.circuitbreaker.instances.transactionBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.transactionBreaker.permittedNumberOfCallsInHalfOpenState=5
resilience4j.circuitbreaker.instances.transactionBreaker.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.transactionBreaker.failureRateThreshold=50

resilience4j.circuitbreaker.instances.transactionBreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.transactionBreaker.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.transactionBreaker.sliding-window-type=count_based

# ********** for retry mechanism ***********************
resilience4j.retry.instances.transactionBreaker.max-attempts=5
resilience4j.retry.instances.transactionBreaker.wait-duration = 2s

# ************ rate limiter mechanism ********************************
resilience4j.ratelimiter.instances.transactionBreaker.timeout-duration = 2
# it will allow 2 calls for every 4s
resilience4j.ratelimiter.instances.transactionBreaker.limit-refresh-period = 4s
resilience4j.ratelimiter.instances.transactionBreaker.limit-for-period = 2

# *************************************************************